package model;
// Generated 03-11-2016 11:13:19 by Hibernate Tools 5.2.0.Beta1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * MedicionIndividuo generated by hbm2java
 */
@Entity
@Table(name = "medicion_individuo", catalog = "raiting")
public class MedicionIndividuo implements java.io.Serializable {

	private Integer id;

	private Edad edad;

	private Gse gse;

	private MedicionHogar medicionHogar;

	private int individuoId;

	private int cable;

	private int tipoDuennaCasa;

	private int genero;

	private int tipoJefeHogar;

	private BigDecimal individuoPeso;

	private int tipoTrabaja;

	private int edadCnt;

	private Set<MedicionCanal> medicionCanals = new HashSet<MedicionCanal>(0);

	public MedicionIndividuo() {
	}

	public MedicionIndividuo(Edad edad, Gse gse, MedicionHogar medicionHogar, int individuoId, int cable,
			int tipoDuennaCasa, int genero, int tipoJefeHogar, BigDecimal individuoPeso, int tipoTrabaja, int edadCnt) {
		this.edad = edad;
		this.gse = gse;
		this.medicionHogar = medicionHogar;
		this.individuoId = individuoId;
		this.cable = cable;
		this.tipoDuennaCasa = tipoDuennaCasa;
		this.genero = genero;
		this.tipoJefeHogar = tipoJefeHogar;
		this.individuoPeso = individuoPeso;
		this.tipoTrabaja = tipoTrabaja;
		this.edadCnt = edadCnt;
	}

	public MedicionIndividuo(Edad edad, Gse gse, MedicionHogar medicionHogar, int individuoId, int cable,
			int tipoDuennaCasa, int genero, int tipoJefeHogar, BigDecimal individuoPeso, int tipoTrabaja, int edadCnt,
			Set<MedicionCanal> medicionCanals) {
		this.edad = edad;
		this.gse = gse;
		this.medicionHogar = medicionHogar;
		this.individuoId = individuoId;
		this.cable = cable;
		this.tipoDuennaCasa = tipoDuennaCasa;
		this.genero = genero;
		this.tipoJefeHogar = tipoJefeHogar;
		this.individuoPeso = individuoPeso;
		this.tipoTrabaja = tipoTrabaja;
		this.edadCnt = edadCnt;
		this.medicionCanals = medicionCanals;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "edad_id", nullable = true)
	public Edad getEdad() {
		return this.edad;
	}

	public void setEdad(Edad edad) {
		this.edad = edad;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "gse_id", nullable = true)
	public Gse getGse() {
		return this.gse;
	}

	public void setGse(Gse gse) {
		this.gse = gse;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "medicion_hogar_id", nullable = false)
	public MedicionHogar getMedicionHogar() {
		return this.medicionHogar;
	}

	public void setMedicionHogar(MedicionHogar medicionHogar) {
		this.medicionHogar = medicionHogar;
	}

	@Column(name = "individuo_id", nullable = false)
	public int getIndividuoId() {
		return this.individuoId;
	}

	public void setIndividuoId(int individuoId) {
		this.individuoId = individuoId;
	}

	@Column(name = "cable", nullable = true)
	public int getCable() {
		return this.cable;
	}

	public void setCable(int cable) {
		this.cable = cable;
	}

	@Column(name = "tipo_duenna_casa", nullable = true)
	public int getTipoDuennaCasa() {
		return this.tipoDuennaCasa;
	}

	public void setTipoDuennaCasa(int tipoDuennaCasa) {
		this.tipoDuennaCasa = tipoDuennaCasa;
	}

	@Column(name = "genero", nullable = true)
	public int getGenero() {
		return this.genero;
	}

	public void setGenero(int genero) {
		this.genero = genero;
	}

	@Column(name = "tipo_jefe_hogar", nullable = true)
	public int getTipoJefeHogar() {
		return this.tipoJefeHogar;
	}

	public void setTipoJefeHogar(int tipoJefeHogar) {
		this.tipoJefeHogar = tipoJefeHogar;
	}

	@Column(name = "individuo_peso", nullable = true, precision = 10, scale = 2)
	public BigDecimal getIndividuoPeso() {
		return this.individuoPeso;
	}

	public void setIndividuoPeso(BigDecimal individuoPeso) {
		this.individuoPeso = individuoPeso;
	}

	@Column(name = "tipo_trabaja", nullable = true)
	public int getTipoTrabaja() {
		return this.tipoTrabaja;
	}

	public void setTipoTrabaja(int tipoTrabaja) {
		this.tipoTrabaja = tipoTrabaja;
	}

	@Column(name = "edad_cnt", nullable = true)
	public int getEdadCnt() {
		return this.edadCnt;
	}

	public void setEdadCnt(int edadCnt) {
		this.edadCnt = edadCnt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "medicionIndividuo")
	public Set<MedicionCanal> getMedicionCanals() {
		return this.medicionCanals;
	}

	public void setMedicionCanals(Set<MedicionCanal> medicionCanals) {
		this.medicionCanals = medicionCanals;
	}

}
